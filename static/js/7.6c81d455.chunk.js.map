{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviewsById","then","response","console","log","data","length","map","review","author","content"],"mappings":"yLAkCeA,UA9BC,WACd,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QAUR,OARAE,qBAAU,WACRC,YAAiBH,GACdI,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACLA,KAERD,MAAK,SAAAI,GAAI,OAAIT,EAAWS,QAC1B,CAACR,IAEF,mCACGF,EAAQW,OAAS,EAChB,6BACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,+BACE,4BAAIA,EAAOC,SACX,4BAAID,EAAOE,YAFJF,EAAOC,aAOpB","file":"static/js/7.6c81d455.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from '../../services/fetchAPI';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviewsById(movieId)\n      .then(response => {\n        console.log(response);\n        return response;\n      })\n      .then(data => setReviews(data));\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.author}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Sorry, no reviews given</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"sourceRoot":""}